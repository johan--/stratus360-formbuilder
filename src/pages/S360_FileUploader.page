<apex:page >
    <script>
    function getParameterByName(name, url) {
        if (!url) url = window.location.href;
        name = name.replace(/[\[\]]/g, '\\$&');
        var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),
            results = regex.exec(url);
        if (!results) return null;
        if (!results[2]) return '';
        return decodeURIComponent(results[2].replace(/\+/g, ' '));
    }
    
    var randomString = function () {
        'use strict';
        var str = '',
            i;
        for (i = 0; i < 4; i += 1) {
            str += (Math.random().toString(16) + "000000000").substr(2, 8);
        }
        return str;
    };
    
    var blob = function (path, fields, filename, payloadField, payload, apiVersion, success, error) {
		var apiVersion = (apiVersion === undefined || apiVersion === null) ? 'v29.0' : apiVersion;
		var sessionId = '{!$Api.Session_ID}';
        
        debugger;
        'use strict';
        var that = this,
            url = '{!LEFT($CurrentPage.URL,FIND('/',$CurrentPage.URL,9))}' + '/services/data' + path,
            boundary = randomString(),
            blob = new Blob([
                "--boundary_" + boundary + '\n'
                    + "Content-Disposition: form-data; name=\"entity_content\";" + "\n"
                    + "Content-Type: application/json" + "\n\n"
                    + JSON.stringify(fields)
                    + "\n\n"
                    + "--boundary_" + boundary + "\n"
                    + "Content-Type: application/octet-stream" + "\n"
                    + "Content-Disposition: form-data; name=\"" + payloadField
                    + "\"; filename=\"" + filename + "\"\n\n",
                payload,
                "\n\n"
                    + "--boundary_" + boundary + "--"
            ], {type : 'multipart/form-data; boundary=\"boundary_' + boundary + '\"'}),
            request = new XMLHttpRequest();

        request.open("POST", url, true);

        request.setRequestHeader('Accept', 'application/json');
        request.setRequestHeader('Authorization', "Bearer " + sessionId);
        request.setRequestHeader('X-User-Agent', 'salesforce-toolkit-rest-javascript/' + apiVersion);
        request.setRequestHeader('Content-Type', 'multipart/form-data; boundary=\"boundary_' + boundary + '\"');

        request.onreadystatechange = function () {
            // continue if the process is completed
            if (request.readyState === 4) {
                // continue only if HTTP status is good
                if (request.status >= 200 && request.status < 300) {
                    // retrieve the response
                    success(request.response ? JSON.parse(request.response) : null);
                } else {
                    debugger;
                    // return status message
                    error(request);
                }
            }
        };

        request.send(blob);
    }
    
    function dataURItoBlob(dataURI) {
        // convert base64 to raw binary data held in a string
        // doesn't handle URLEncoded DataURIs - see SO answer #6850276 for code that does this
        var byteString = atob(dataURI.split(',')[1]);
        
        // separate out the mime component
        var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];
        
        // write the bytes of the string to an ArrayBuffer
        var ab = new ArrayBuffer(byteString.length);
        var ia = new Uint8Array(ab);
        for (var i = 0; i < byteString.length; i++) {
            ia[i] = byteString.charCodeAt(i);
        }
        
        //New Code
        return new Blob([ab], {type: mimeString});
    }
    
    
    /**
     *
     */
     var apiVersion = getParameterByName('apiversion') ? getParameterByName('apiversion') : 'v29.0';
    
    window.addEventListener("message" ,function(event) {
        var dstOrigin = event.origin;
     	var pageuuid = getParameterByName('pageid');
        
        var uuid = event.data[0];
        var docid = event.data[1];
        var file = event.data[2];
        
        var data = dataURItoBlob(file.contents);
        
        if (pageuuid != uuid) {
            return;
        }
        
        debugger;
        
        blob(
            '/' + apiVersion + '/sobjects/ContentVersion/',
            {
                Origin: 'C', // 'H' for Chatter File, 'C' for Content Document
                PathOnClient: file.name,
                Title: file.name,
                ContentDocumentId: '',
                ReasonForChange: 'new document'
            },
            file.name,
            'VersionData',
            data,
            apiVersion,
            function(res){
                parent.postMessage([pageuuid, res], dstOrigin);
            },
            function(res){
                parent.postMessage([pageuuid, res], dstOrigin);
            }
        )
        
    }, false);
    
    
    
    	
    </script>
</apex:page>